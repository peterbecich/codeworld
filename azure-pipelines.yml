jobs:
  - job: codeworld_account
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-account
          stack setup
          stack build
          stack test
  - job: codeworld_api
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-api
          stack setup
          stack build
          stack test
  - job: codeworld_auth
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-auth
          stack setup
          stack build
          stack test
  - job: codeworld_base
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-base
          stack setup
          stack build
          stack test
  - job: codeworld_compiler
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-compiler
          stack setup
          stack build
          stack test
  - job: codeworld_error_sanitizer
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-error-sanitizer
          stack setup
          stack build
          stack test
  - job: codeworld_game_api
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-game-api
          stack setup
          stack build
          stack test
  - job: codeworld_game_server
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-game-server
          stack setup
          stack build
          stack test
  - job: codeworld_prediction
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-prediction
          stack setup
          stack build
          stack test
  - job: codeworld_server
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd codeworld-server
          stack setup
          stack build
          stack test
  - job: funblocks_client
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          mkdir -p ~/.local/bin
          curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          export PATH=$HOME/.local/bin:$PATH          
        displayName: Install Stack
      - script: |
          export PATH=$HOME/.local/bin:$PATH
          cd funblocks-client
          stack setup
          stack build
          stack test
