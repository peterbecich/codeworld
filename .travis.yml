language: node_js
node_js:
  - "node"
  
sudo: required

services:
  - docker

cache:
  timeout: 600
  bundler: true
  directories:
  - $HOME/.stack
  # - $HOME/docker/
  - $HOME/codeworld-api/.stack-work
  - $HOME/codeworld-base/.stack-work
  - $HOME/codeworld-compiler/.stack-work
  - $HOME/codeworld-error-sanitizer/.stack-work
  - $HOME/codeworld-game-api/.stack-work
  - $HOME/codeworld-game-server/.stack-work
  - $HOME/codeworld-prediction/.stack-work
  - $HOME/codeworld-server/.stack-work
  

# https://docs.travis-ci.com/user/customizing-the-build#Build-Matrix
env:
  - MODULE=codeworld-api DOCKER_BASE_IMAGE=fpco/stack-build:lts-10.3
  - MODULE=codeworld-base DOCKER_BASE_IMAGE=fpco/stack-build:lts-7.19
  - MODULE=codeworld-compiler DOCKER_BASE_IMAGE=fpco/stack-build:lts-7.19
  - MODULE=codeworld-error-sanitizer DOCKER_BASE_IMAGE=fpco/stack-build:lts-10.3
  - MODULE=codeworld-game-api DOCKER_BASE_IMAGE=fpco/stack-build:lts-10.3
  - MODULE=codeworld-game-server DOCKER_BASE_IMAGE=fpco/stack-build:lts-10.3
  - MODULE=codeworld-prediction DOCKER_BASE_IMAGE=fpco/stack-build:lts-10.3
  - MODULE=codeworld-server DOCKER_BASE_IMAGE=fpco/stack-build:lts-10.3

before_install:
  - df -h
  # Load cached docker images
  # https://github.com/travis-ci/travis-ci/issues/5358#issuecomment-248915326
  # - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi

  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y install docker-ce

  - df -h

  # - stack docker pull
  # - travis_wait 20 docker pull fpco/stack-build:lts-10.3
  # - travis_wait 20 docker pull fpco/stack-build:lts-7.19
  - travis_wait 20 docker pull $DOCKER_BASE_IMAGE

  - df -h

  # Save fpco docker images
  # - >
  #   mkdir -p $HOME/docker && docker images "fpco/*" -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
  #   | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
  

  - df -h
  
  # Download and unpack the stack executable
  - mkdir -p ~/.local/bin
  - export PATH=$HOME/.local/bin:$PATH
  - travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'

script:
  - pwd
  - ls
  - cd $MODULE
  - stack setup
  - stack build --fast
  - stack test

# before_cache:
  # Save fpco docker images
  # - >
  #   mkdir -p $HOME/docker && docker images "fpco/*" -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
  #   | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

  
